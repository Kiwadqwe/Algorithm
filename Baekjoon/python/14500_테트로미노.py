import sys
input = sys.stdin.readline
tetromino = [
    [(0,0),(0,1),(0,2),(0,3)], 
    [(0,0),(1,0),(2,0),(3,0)],

    [(0,0),(0,1),(1,0),(1,1)],
    
    [(0,0),(1,0),(2,0),(2,1)],
    [(0,1),(1,1),(2,0),(2,1)],
    [(0,0),(1,0),(0,1),(0,2)],
    [(0,0),(0,1),(0,2),(1,2)],
    [(0,0),(0,1),(1,1),(2,1)],
    [(0,0),(0,1),(1,0),(2,0)],
    [(0,2),(1,0),(1,1),(1,2)],
    [(0,0),(1,0),(1,1),(1,2)],

    [(0,0),(1,0),(1,1),(2,1)],
    [(0,1),(1,1),(1,0),(2,0)],
    
    [(0,1),(0,2),(1,0),(1,1)],
    [(0,0),(0,1),(1,1),(1,2)],

    [(0,0),(0,1),(0,2),(1,1)],
    [(0,1),(1,0),(1,1),(1,2)],

    [(0,1),(1,0),(1,1),(2,1)],
    [(0,0),(1,0),(2,0),(1,1)],
    ]

n,m = map(int,input().split())
array = [list(map(int,input().split())) for _ in range(n)]
result = 0

def move(x,y):
    global result
    for k in range(len(tetromino)):
        tp = 0
        for i in range(4):
            nx,ny = tetromino[k][i][0]+x,tetromino[k][i][1]+y
            if 0<=nx<n and 0<=ny<m:
                tp += array[nx][ny]
            
        result = max(result,tp)

for x in range(n):
    for y in range(m):
        move(x,y)
        
print(result)

# 5 5
# 1 2 3 4 5
# 5 4 3 2 1
# 2 3 4 5 6
# 6 5 4 3 2
# 1 2 1 2 1

# 19